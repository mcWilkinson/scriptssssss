#!/usr/bin/env sh

# Console Colors
RED='\033[0;31m'
GRN='\033[0;32m'
YLW='\033[0;33m'
BLU='\033[1;34m'
NC='\033[0m'

#TAGS
INFO="[${BLU}Info${NC}]"
WARNING="[${YLW}Warning${NC}]"
ERROR="[${RED}Error${NC}]"
SUCCESS="[${GRN}Success${NC}]"
FAILURE="[${RED}Error${NC}]"

BRANCH=`(git rev-parse --abbrev-ref HEAD -- | grep -m1 "")`
printf "${INFO} Starting script.\n"

if [[ -z "${TEAM_BRANCH}" ]]; then
  printf "${INFO} TEAM_BRANCH found. Using '%s'\n" $TEAM_BRANCH
else
  printf "${WARNING} No value found for TEAM_BRANCH. Using 'dev'"
  TEAM_BRANCH='dev'
fi

printf "${INFO} Checking out %s.\n" $TEAM_BRANCH
git checkout $TEAM_BRANCH -q

if [[ $? -ne 0 ]]; then
  printf "${ERROR} Checkout failed. Exiting.\n"
  exit 1
else
  printf "${INFO} Checkout successful.\n"
fi

printf "${INFO} Running git fetch.\n"
git fetch -q

if [[ $? -ne 0 ]]; then
  printf "${ERROR} Fetch failed. Changing back to the previous branch.\n"
  git checkout - -q
  if [[ $? -ne 0 ]]; then
    printf "${ERROR} Checkout failed. Exiting.\n"
    exit 1
  else
    printf "${Error} Checkout successful.\n"
  fi
  printf "${ERROR} Exiting.\n"
  exit 1
else
  printf "${INFO} Fetch successful.\n"
fi

printf "${INFO} Running git pull" $TEAM_BRANCH
git pull -q

if [[ $? -ne 0 ]]; then
  printf "${ERROR} Reset failed. Changing back to the previous branch.\n"
  git checkout - -q
  if [[ $? -ne 0 ]]; then
    printf "${ERROR} Checkout failed. Exiting.\n"
    exit 1
  else
    printf "${Error} Checkout successful.\n"
  fi
  printf "${ERROR} Exiting.\n"
  exit 1
else
  printf "${INFO} Pull successful.\n"
fi

# printf "${INFO} Running hard git reset on origin/%s." $TEAM_BRANCH
# git reset --hard origin/$TEAM_BRANCH -q
#
# if [[ $? -ne 0 ]]; then
#   printf "${ERROR} Reset failed. Changing back to the previous branch.\n"
#   git checkout - -q
#   if [[ $? -ne 0 ]]; then
#     printf "${ERROR} Checkout failed. Exiting.\n"
#     exit 1
#   else
#     printf "${Error} Checkout successful.\n"
#   fi
#   printf "${ERROR} Exiting.\n"
#   exit 1
# else
#   printf "${INFO} Fetch successful.\n"
# fi

printf "${INFO} Script complete. Exiting...\n"
