#!/bin/sh
# Redirect output to stderr.
exec 1>&2

# Console Colors
RED='\033[0;31m'
GRN='\033[0;32m'
YLW='\033[0;33m'
BLU='\033[1;34m'
NC='\033[0m'

#TAGS
INFO="[${BLU}Info${NC}]"
WARNING="[${YLW}Warning${NC}]"
ERROR="[${RED}Error${NC}]"
SUCCESS="[${GRN}Success${NC}]"
FAILURE="[${RED}Error${NC}]"

# Files
RBENV="$(command -v rbenv)"
ESLINT="$(command -v eslint)"
PRETTIER="$(command -v prettier)"
RUBOCOP="$(command -v rubocop)"

# Set up PASSING value
PASS=true

# Check for rbenv (sorry rvm)
if [[ -e "$RBENV" ]]; then
  printf "${SUCCESS} RBEnv Found.\n"
else
  printf "${ERROR} RBEnv not found. Please install RBEnv before continuing.\n"
  exit 1
fi

# Check for ESLINT
if [[ -e "$ESLINT" ]]; then
  printf "${SUCCESS} ESLint Found.\n"
else
  printf "${ERROR} ESLint not found. Please install ESLint before continuing.\n"
  exit 1
fi

# Check for PRETTIER
if [[ -e "$PRETTIER" ]]; then
  printf "${SUCCESS} Prettier Found\n"
else
  printf "${ERROR} Prettier not found. Please install Prettier  before continuing.\n"
  exit 1
fi

# Check for RUBOCOP
if [[ -e "$PRETTIER" ]]; then
  printf "${SUCCESS} Rubocop Found\n"
else
  printf "${ERROR} Rubocop not found. Please install Rubocop before continuing.\n"
  exit 1
fi

FILES=$(git diff --cached --name-only --diff-filter=ACMR "*.js" "*.jsx" "*.ts" "*.tsx" | sed 's| |\\ |g')
if [[ -n "$FILES" ]]; then

  printf "${INFO} Running prettier...\n"

  # Prettify all selected files
  echo "$FILES" | xargs prettier --single-quote --write # --write

  # Add back the modified/prettified files to staging
  # echo "$FILES" | xargs git add

  printf "${WARNING} Skipping eslint because I don't want to spend too much time getting it to work.\n"

  # printf "${INFO} Running eslint...\n"
  # for FILE in $FILES
  # do
  #   "$ESLINT" "$FILE"
  #
  #   if [[ "$?" == 0 ]]; then
  #     printf "${SUCCESS} ESLint Passed: $FILE\n"
  #   else
  #     printf "${FAILURE} ESLint Failed: $FILE\n"
  #     PASS=false
  #   fi
  # done
else
  printf "${INFO} No javascript files found. Skipping prettier and eslint...\n"
fi

printf "\n"

FILES=$(git diff --cached --name-only --diff-filter=ACMR "*.rb" | sed 's| |\\ |g')
if [[ -n "$FILES" ]]; then

  # Fix formatting
  echo "$FILES" | xargs rubocop -x

  echo "$FILES" | xargs git add

  # Run rubocop
  for FILE in $FILES
  do
    "$RUBOCOP" "$FILE"

    if [[ "$?" == 0 ]]; then
      printf "${SUCCESS} Rubocop Passed: $FILE\n"
    else
      printf "${FAILURE} Rubocop Failed: $FILE\n"
      PASS=false
    fi
  done
else
  printf "${INFO} No ruby files found. Skipping rubocop...\n"
fi

# Custom tests
if test $(git diff --cached | grep "console.log" | wc -l) != 0
then
	printf "${WARNING} There are some occurrences of 'console.log' in your modification.\n"
fi

if test $(git diff --cached | grep "debugger" | wc -l) != 0
then
	printf "${WARNING} There are some occurrences of 'debugger' in your modification.\n"
fi


# Pass or fail?
if ! $PASS; then
  printf "${WARNING} Your commit contains files that didn't pass (╯°□°)╯︵ ┻━┻\n"
else
  printf "${SUCCESS} Excellent Job! ᕙ(°◡°)ᕗ\n"
fi

exit 0;
